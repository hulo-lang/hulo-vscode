{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "hulo",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#unsafe"
		},
		{
			"include": "#module"
		},
		{
			"include": "#command"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#enum"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#declaration"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#type"
		}
	],
	"repository": {
		"unsafe": {
			"patterns": [
				{
					"begin": "(\\$)\\{",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"begin": "\\{\\{",
							"end": "\\}\\}",
							"patterns": [
								{
									"match": "(if|loop|macro|end)",
									"name": "keyword.control"
								},
								{
									"include": "#constant"
								},
								{
									"match": "(@|\\$|&)\\w+",
									"name": "variable.other"
								},
								{
									"include": "#operators"
								},
								{
									"include": "#strings"
								},
								{
									"match": "\\w+",
									"name": "entity.name.function"
								}
							]
						}
					]
				}
			]
		},
		"command": {
			"patterns": [
				{
					"name": "constant.other",
					"match": "(?<!\\w)--[\\w-]+"
				},
				{
					"name": "constant.other",
					"match": "(?<!\\w)-\\w+\\b"
				}
			]
		},
		"module": {
			"patterns": [
				{
					"match": "(\\w+)::",
					"captures": {
						"1": {
							"name": "entity.name.namespace"
						}
					}
				},
				{
					"match": "(?<=::)(\\w+)(?!\\s*(\\(|\\.))\\b",
					"captures": {
						"1": {
							"name": "variable.other"
						}
					}
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"name": "variable.other",
					"match": "(?<=(let|const|var) \\s*)\\w+"
				},
				{
					"name": "variable.language",
					"match": "\\$(this|super)"
				},
				{
					"name": "variable.other",
					"match": "\\$\\w+"
				},
				{
					"match": "\\w+\\s*(?=:)",
					"name": "variable.parameter"
				},
				{
					"match": "(?<=\\.\\.)(\\w+)(?!\\s*\\()\\b",
					"captures": {
						"1": {
							"name": "variable.parameter"
						}
					}
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.other",
					"match": "(\\=\\>|\\-\\>|:=)"
				},
				{
					"name": "support.function",
					"match": "(?<!\\S)--(?!\\w)"
				},
				{
					"name": "keyword.operator",
					"match": "(@|\\.\\.\\.|\\?|:|\\!|&|\\$|\\||>|<|=|\\+|\\-|\\*|\\/|%|\\+=|\\-=|\\*=|\\/=|%=)"
				}
			]
		},
		"type": {
			"patterns": [
				{
					"name": "entity.name.type",
					"match": "\\b(str|num|bool|any|map|list)\\b"
				},
				{
					"name": "entity.name.type",
					"match": "\\b(\\w+)\\b"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.double-dash",
					"match": "\/\/.*$"
				},
				{
					"name": "comment.line.double-dash",
					"begin": "\/\\*",
					"end": "\\*\/"
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.language",
					"match": "\\b(true|false|null)\\b"
				},
				{
					"name": "constant.numeric",
					"match": "\\b\\d+(\\.\\d+)?\\b"
				}
			]
		},
		"declaration": {
			"patterns": [
				{
					"name": "entity.name.function",
					"match": "(?<=fn \\s*)\\w+"
				},
				{
					"name": "support.function",
					"match": "@\\w+"
				},
				{
					"name": "entity.name.function.hulo",
					"match": "\\b\\w+(?=\\s*\\?\\.\\s*(<[^<>]*>)?\\s*\\()|\\b\\w+(?=\\s*(<[^<>]*>)?\\s*\\()"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.hulo",
					"match": "\\b(mod|part|use|class|enum|trait|cmd|fn|let|var|const|import|is|as|from|type|typeof|operator|impl|for|extend|try|catch|finally|defer|throw|throws|if|else|match|do|loop|in|range|return|break|continue|comptime|unsafe|extern|declare|async|await)\\b"
				},
				{
					"name": "keyword.operator.new",
					"match": "\\b(new|delete)\\b"
				},
				{
					"name": "storage.modifier",
					"match": "\\b(static|final|pub|required|readonly|get)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.triple.hulo",
					"begin": "\"\"\"",
					"end": "\"\"\""
				},
				{
					"name": "string.quoted.single.hulo",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.hulo",
							"match": "\\\\."
						}
					]
				},
				{
					"begin": "\"",
					"end": "\"",
					"name": "string.quoted.double.hulo",
					"patterns": [
						{
							"name": "constant.character.escape.hulo",
							"match": "\\\\."
						},
						{
							"begin": "(\\${)",
							"end": "(})",
							"beginCaptures": {
								"1": {
									"name": "punctuation.definition.template-expression.begin.hl"
								}
							},
							"endCaptures": {
								"1": {
									"name": "punctuation.definition.template-expression.end.hl"
								}
							},
							"patterns": [
								{
									"include": "#variable"
								},
								{
									"include": "#declaration"
								},
								{
									"include": "#keywords"
								},
								{
									"include": "#operators"
								},
								{
									"include": "#constant"
								},
								{
									"include": "#type"
								}
							]
						},
						{
							"name": "variable.language",
							"match": "\\$\\w+"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.hl"
}